
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user within the Solaris Manager application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "The user's role within the application (e.g., 'admin', 'manager')."
        }
      },
      "required": [
        "id",
        "name",
        "email"
      ]
    },
    "Client": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Client",
      "type": "object",
      "description": "Represents a client company that Solaris Manager works with.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the client entity."
        },
        "name": {
          "type": "string",
          "description": "The client's company name."
        },
        "email": {
          "type": "string",
          "description": "The client's email address.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "name",
        "email"
      ]
    },
    "Project": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Project",
      "type": "object",
      "description": "Represents a project being managed by Solaris Manager.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the project entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the project."
        },
        "projectType": {
          "type": "string",
          "description": "The type of project (e.g., solar, wind, boiler, lighting)."
        },
        "clientId": {
          "type": "string",
          "description": "Reference to Client. (Relationship: Client 1:N Project)"
        },
        "managerId": {
          "type": "string",
          "description": "Reference to User (Manager). (Relationship: User 1:N Project)"
        },
        "startDate": {
          "type": "string",
          "description": "The project's start date.",
          "format": "date-time"
        },
        "estimatedEndDate": {
          "type": "string",
          "description": "The project's estimated end date.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "The current status of the project."
        }
      },
      "required": [
        "id",
        "name",
        "projectType",
        "clientId",
        "managerId",
        "startDate",
        "estimatedEndDate",
        "status"
      ]
    },
    "WeeklyReport": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "WeeklyReport",
      "type": "object",
      "description": "Represents a weekly progress report for a project.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the weekly report entity, generated by Firestore."
        },
        "projectId": {
          "type": "string",
          "description": "Reference to Project. (Relationship: Project 1:N WeeklyReport)"
        },
        "week": {
          "type": "number",
          "description": "The sequential report number for the project (e.g., 1, 2, 3)."
        },
        "progress": {
          "type": "number",
          "description": "The progress percentage (0-100) for the week."
        },
        "milestones": {
          "type": "array",
          "description": "Array of completed milestone IDs for the week.",
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "type": "string",
          "description": "A summary of the week's progress."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp of when the report was created.",
          "format": "date-time"
        },
        "status": {
            "type": "string",
            "description": "The status of the project for that week ('On Track', 'At Risk', 'Off Track')."
        }
      },
      "required": [
        "projectId",
        "week",
        "progress",
        "milestones",
        "summary",
        "createdAt",
        "status"
      ]
    },
    "Milestone": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Milestone",
      "type": "object",
      "description": "Represents a predefined project milestone template.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the milestone."
        },
        "name": {
          "type": "string",
          "description": "The name of the milestone."
        },
        "description": {
          "type": "string",
          "description": "A brief description of what the milestone entails."
        },
        "projectType": {
          "type": "string",
          "description": "The type of project this milestone belongs to (e.g., 'solar', 'wind')."
        }
      },
      "required": [
        "name",
        "projectType"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/entities/User"
          },
          "description": "Stores user profile data. A user can read/write their own document. Admins (role == 'admin' in token) can perform 'get' and 'list' operations.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/clients/{clientId}",
        "definition": {
          "entityName": "Client",
          "schema": {
            "$ref": "#/entities/Client"
          },
          "description": "Stores client company data. Only admins (role == 'admin' in token) can create, read (get/list), and write clients.",
          "params": [
            {
              "name": "clientId",
              "description": "The unique identifier for the client."
            }
          ]
        }
      },
      {
        "path": "/projects/{projectId}",
        "definition": {
          "entityName": "Project",
          "schema": {
            "$ref": "#/entities/Project"
          },
          "description": "Stores project data. Admins can read/write all projects. Managers can read all projects, but only write to projects they are assigned to (managerId == request.auth.uid).",
          "params": [
            {
              "name": "projectId",
              "description": "The unique identifier for the project."
            }
          ]
        }
      },
      {
        "path": "/projects/{projectId}/weeklyReports/{reportId}",
        "definition": {
          "entityName": "WeeklyReport",
          "schema": {
            "$ref": "#/entities/WeeklyReport"
          },
          "description": "Stores weekly progress reports for a specific project. Accessible by admins or managers assigned to the project.",
          "params": [
            {
              "name": "projectId",
              "description": "The unique identifier for the project."
            },
            {
              "name": "reportId",
              "description": "The unique identifier for the weekly report."
            }
          ]
        }
      },
      {
        "path": "/milestones/{milestoneId}",
        "definition": {
            "entityName": "Milestone",
            "schema": {
                "$ref": "#/entities/Milestone"
            },
            "description": "Stores milestone templates. Any authenticated user can read, create, update, and delete milestones.",
            "params": [{
                "name": "milestoneId",
                "description": "The unique identifier for the milestone."
            }]
        }
      }
    ],
    "reasoning": "This Firestore data structure is designed for the Solaris Manager application. It includes role-based access for Users, Clients, and Projects. The structure for WeeklyReports is a subcollection under Projects for clear data hierarchy. A new top-level collection for Milestones is added to store templates, accessible by any authenticated user for management. This supports the workflow of creating milestone templates that can then be applied to projects based on their type. Progress tracking is automated through milestone completion within weekly reports."
  }
}
